import{_ as n,o as s,c as a,e as t}from"./app.5cd79e7c.js";const p={},e=t(`<h2 id="\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a> \u80CC\u666F</h2><p>\u6211\u4EEC\u5047\u5B9A\u73B0\u5728\u521B\u5EFA\u4E863\u4E2A\u5DE5\u4F5C\u7EBF\u7A0B\uFF0C\u8FD93\u4E2A\u7EBF\u7A0B<strong>\u90FD\u9700\u8981</strong>\u901A\u8FC7\u4E32\u53E3\u8F93\u51FA\u65E5\u5FD7\u6216\u5185\u5BB9\u3002\u5F88\u7B80\u5355\u7684\u8BA4\u4E3A\uFF0C\u6211\u4EEC\u53EF\u4EE5\u505A\u5230\u5404\u4E2A\u4EFB\u52A1<strong>\u8FDE\u7EED\u8F93\u51FA\u81EA\u5DF1\u7EBF\u7A0B</strong>\u7684\u5185\u5BB9\uFF0C\u5B9E\u9645\u4E0A\u4E0D\u662F\u7684\uFF0C\u8FD9\u6D89\u53CA\u5230\u4E86<strong>\u591A\u7EBF\u7A0B\u539F\u7406</strong>\uFF0C\u6709\u65F6\u95F4\u8DDF\u5927\u5BB6\u8BF4\u8BF4\uFF0C\u6216\u8005\u5927\u5BB6\u53EF\u4EE5\u53BB\u4E86\u89E3\u4E86\u89E3\u3002 \u5728\u8FD9\u7BC7\u6587\u7AE0\u53EA\u6D89\u53CA<strong>\u9898\u76EE</strong>\u63D0\u51FA\u7684\u95EE\u9898\u89E3\u51B3\u65B9\u6CD5\u3002</p><h2 id="\u51C6\u5907\u5DE5\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u51C6\u5907\u5DE5\u4F5C" aria-hidden="true">#</a> \u51C6\u5907\u5DE5\u4F5C</h2><ol><li>STM32 Cube\u7CFB\u5217\u8F6F\u4EF6\u5F00\u53D1\u5DE5\u5177</li><li>\u4E00\u5757\u53EF\u4EE5\u4F7F\u7528\u7684STM32\u5355\u7247\u673A</li><li>\u4E00\u4E2A<strong>ST LINK \u4E0B\u8F7D\u5668</strong> \u548C \u4E00\u4E2A <strong>USB \u8F6C TTL</strong></li><li>\u4E00\u4E2A\u53EF\u4EE5\u6B63\u5E38\u5DE5\u4F5C\u5F00\u53D1\u7A0B\u5E8F\u7684\u7535\u8111</li></ol><h2 id="\u5F00\u53D1\u73AF\u5883" tabindex="-1"><a class="header-anchor" href="#\u5F00\u53D1\u73AF\u5883" aria-hidden="true">#</a> \u5F00\u53D1\u73AF\u5883</h2><p>\u8BF7\u81EA\u884C\u642D\u5EFA\u6700\u57FA\u7840\u7684\u5F00\u53D1\u73AF\u5883\uFF0C\u80FD\u505A\u5230\u5982\u4E0B\u51E0\u70B9\u5C31\u53EF\u4EE5\u4E86\uFF1A</p><ol><li>\u53EF\u4EE5\u7F16\u5199STM32\u7A0B\u5E8F\u5E76\u4E0B\u8F7D\u5230\u5355\u7247\u673A</li><li>\u91CD\u5B9A\u5411 printf \u5230\u4E32\u53E3</li><li>\u53EF\u4EE5\u5728\u4E32\u53E3\u770B\u5230<strong>\u6B63\u786E\u7684</strong> <strong>\u4F60\u60F3\u8981\u7684</strong>\u4EE3\u7801\u8F93\u51FA\u7ED3\u679C</li><li>FreeRTOS \u4F7F\u7528 CMSIS V2 \u63A5\u53E3</li></ol><h2 id="\u95EE\u9898\u590D\u73B0" tabindex="-1"><a class="header-anchor" href="#\u95EE\u9898\u590D\u73B0" aria-hidden="true">#</a> \u95EE\u9898\u590D\u73B0</h2><p>\u6211\u4EEC\u5148\u590D\u73B0\u4E00\u4E0B \u6807\u9898 \u4E2D\u63CF\u8FF0\u7684\u95EE\u9898\uFF1A</p><h3 id="\u4F7F\u7528cubemx\u914D\u7F6E\u6211\u4EEC\u521D\u59CB\u5316\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528cubemx\u914D\u7F6E\u6211\u4EEC\u521D\u59CB\u5316\u4EE3\u7801" aria-hidden="true">#</a> \u4F7F\u7528cubemx\u914D\u7F6E\u6211\u4EEC\u521D\u59CB\u5316\u4EE3\u7801</h3><p>\u914D\u7F6EUSART1\u4F5C\u4E3A\u6211\u4EEC\u63A5\u4E0B\u6765\u4F8B\u5B50\u4E2D\u7684\u4F7F\u7528\u4E32\u53E3</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// printf \u91CD\u5B9A\u5411\u4EE3\u7801 STM32H743</span>
<span class="token keyword">int</span> <span class="token function">__io_putchar</span><span class="token punctuation">(</span><span class="token keyword">int</span> ch<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span> <span class="token punctuation">(</span>USART1<span class="token operator">-&gt;</span>ISR <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0x1UL</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">6U</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	USART1<span class="token operator">-&gt;</span>TDR <span class="token operator">=</span> ch<span class="token punctuation">;</span>
	<span class="token keyword">return</span> ch<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u914D\u7F6EFreeRTOS\uFF0C\u6211\u4EEC\u5148\u6DFB\u52A03\u4E2A\u7EBF\u7A0B\uFF0Ccubemx\u7684\u56FE\u6211\u5C31\u4E0D\u653E\u4E86(\u5982\u679C\u6709\u9700\u8981\uFF0C\u8BF7\u5728\u8BC4\u8BBA\u680F\u7559\u8A00\uFF0C\u6211\u4F1A\u627E\u65F6\u95F4\u653E\u56FE\u7684)\uFF0C\u8FD9\u91CC\u53EA\u653E\u751F\u6210\u7684\u4EE3\u7801\u3002</p><ol><li>\u7EBF\u7A0BID \u548C \u53C2\u6570\u5B9A\u4E49</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/* Definitions for NormalTask01 */</span>
<span class="token class-name">osThreadId_t</span> NormalTask01Handle<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name">osThreadAttr_t</span> NormalTask01_attributes <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;NormalTask01&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>stack_size <span class="token operator">=</span> <span class="token number">128</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>priority <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">osPriority_t</span><span class="token punctuation">)</span> osPriorityNormal<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">/* Definitions for NormalTask03 */</span>
<span class="token class-name">osThreadId_t</span> NormalTask03Handle<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name">osThreadAttr_t</span> NormalTask03_attributes <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;NormalTask03&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>stack_size <span class="token operator">=</span> <span class="token number">128</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>priority <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">osPriority_t</span><span class="token punctuation">)</span> osPriorityNormal<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">/* Definitions for NormalTask02 */</span>
<span class="token class-name">osThreadId_t</span> NormalTask02Handle<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name">osThreadAttr_t</span> NormalTask02_attributes <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;NormalTask02&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>stack_size <span class="token operator">=</span> <span class="token number">128</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>priority <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">osPriority_t</span><span class="token punctuation">)</span> osPriorityNormal<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5728main\u4E2D\u6FC0\u6D3B\u7EBF\u7A0B</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/* creation of NormalTask01 */</span>
NormalTask01Handle <span class="token operator">=</span> <span class="token function">osThreadNew</span><span class="token punctuation">(</span>StartNormalTask01<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>NormalTask01_attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* creation of NormalTask03 */</span>
NormalTask03Handle <span class="token operator">=</span> <span class="token function">osThreadNew</span><span class="token punctuation">(</span>StartNormalTask03<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>NormalTask03_attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* creation of NormalTask02 */</span>
NormalTask02Handle <span class="token operator">=</span> <span class="token function">osThreadNew</span><span class="token punctuation">(</span>StartNormalTask02<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>NormalTask02_attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u7EBF\u7A0B\u65B9\u6CD5\u5B9E\u73B0</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">StartNormalTask01</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>argument<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Normal01 Task Start ... \\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">osDelay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>\uFF1B
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">StartNormalTask02</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>argument<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Normal02 Task Start ... \\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">osDelay</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">StartNormalTask03</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>argument<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Normal03 Task Start ... \\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">osDelay</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u67E5\u770B\u4E32\u53E3\u8F93\u51FA\u7ED3\u679C <img src="https://img-blog.csdnimg.cn/9693e3909fe84e5d8f04f0ebf5830f94.png#pic_center" alt="\u4E32\u53E3\u8F93\u51FA\u7ED3\u679C">\u662F\u4E0D\u662F\u8DDF\u6211\u4EEC\u60F3\u8C61\u4E2D\u7684\u7ED3\u679C\u4E0D\u4E00\u6837\uFF0C\u6211\u4EEC\u60F3\u7684\u662F\u5B83\u4F1A\u6309\u7167\u987A\u5E8F\u8F93\u51FA</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Normal01 Task Start ... 
Normal02 Task Start ... 
Normal03 Task Start ... 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u9645\u4E0A\u5374\u662F\u4E0A\u9762\u56FE\u7247\u7684\u7ED3\u679C\uFF0C\u9020\u6210\u8FD9\u6837\u7684\u539F\u56E0\u5C31\u662F\u591A\u7EBF\u7A0B\u540C\u65F6\u8BBF\u95EE\u4E00\u4E2A\u5171\u4EAB\u8D44\u6E90\u800C\u9020\u6210\u8D44\u6E90\u7684\u62A2\u593A\u73B0\u8C61\u3002</p><h2 id="\u89E3\u51B3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6CD5" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6CD5</h2><p>\u65B0\u589E\u4E00\u4E2A\u4E32\u53E3\u5B88\u62A4\u7EBF\u7A0B\uFF0C\u4EBA\u4E3A\u7981\u6B62\u5176\u4ED6\u7EBF\u7A0B\u8BBF\u95EE\u4E32\u53E3\u8D44\u6E90\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u9700\u8981\u4E32\u53E3\u53D1\u9001\u7684\u5185\u5BB9\u5219\u901A\u8FC7\u6D88\u606F\u961F\u5217\u4F20\u9012\u5230\u4E32\u53E3\u5B88\u62A4\u7EBF\u7A0B\u7EDF\u4E00\u8FDB\u884C\u8F93\u51FA\u3002\u800C\u6D88\u606F\u961F\u5217\u5148\u8FDB\u5148\u51FA\u7684\u7279\u6027\u4FDD\u8BC1\u4E86\u6211\u4EEC\u4E32\u53E3\u8F93\u51FA\u4E0D\u4F1A\u4E71\u5E8F\u3002</p><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><ol><li>\u65B0\u589E<strong>\u4E00\u4E2A\u4E32\u53E3\u8F93\u51FA\u7EBF\u7A0B</strong>\u548C<strong>\u4E00\u4E2A\u6D88\u606F\u961F\u5217</strong>\uFF0C\u6D88\u606F\u961F\u5217\u4F5C\u4E3A\u5176\u4ED6\u7EBF\u7A0B\u4F20\u8F93\u5185\u5BB9\u5230\u4E32\u53E3\u6253\u5370\u7EBF\u7A0B\u7684\u5A92\u4ECB</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/* Definitions for PrintTask */</span>
<span class="token class-name">osThreadId_t</span> PrintTaskHandle<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name">osThreadAttr_t</span> PrintTask_attributes <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;PrintTask&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>stack_size <span class="token operator">=</span> <span class="token number">128</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token punctuation">.</span>priority <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">osPriority_t</span><span class="token punctuation">)</span> osPriorityNormal<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">/* Definitions for PrintQueue */</span>
<span class="token class-name">osMessageQueueId_t</span> PrintQueueHandle<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name">osMessageQueueAttr_t</span> PrintQueue_attributes <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;PrintQueue&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">char</span> getPrintBufFromQueue<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5728main\u4E2D\u6FC0\u6D3B\u7EBF\u7A0B \u548C \u521D\u59CB\u5316\u6D88\u606F\u961F\u5217</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>PrintTaskHandle <span class="token operator">=</span> <span class="token function">osThreadNew</span><span class="token punctuation">(</span>StartPrintTask<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>PrintTask_attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
PrintQueueHandle <span class="token operator">=</span> <span class="token function">osMessageQueueNew</span> <span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>getPrintBufFromQueue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>PrintQueue_attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u6253\u5370\u7EBF\u7A0B\u65B9\u6CD5\u5B9E\u73B0</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">StartPrintTask</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>argument<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">/* USER CODE BEGIN 5 */</span>
  <span class="token comment">/* Infinite loop */</span>
  <span class="token class-name">osStatus_t</span> queueReturn <span class="token operator">=</span> osOK<span class="token punctuation">;</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
	<span class="token comment">// \u7B49\u5F85\u6D88\u606F\u961F\u5217\u4E2D\u7684\u6D88\u606F\uFF0Ctimeout\u6307\u5B9A\u4E3AosWaitForever</span>
	queueReturn <span class="token operator">=</span> <span class="token function">osMessageQueueGet</span><span class="token punctuation">(</span>PrintQueueHandle<span class="token punctuation">,</span> getPrintBufFromQueue<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> osWaitForever<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">while</span><span class="token punctuation">(</span>queueReturn <span class="token operator">==</span> osOK<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// \u6253\u5370\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u83B7\u53D6\u7684\u5B57\u7B26\u4E32\u7F13\u51B2</span>
		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> getPrintBufFromQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8FD9\u91CCtimeout\u6307\u5B9A\u4E3A0\uFF0C\u56E0\u4E3A\u7A0B\u5E8F\u4E0D\u9700\u8981\u963B\u585E\u5728\u8FD9\u91CC</span>
		queueReturn <span class="token operator">=</span> <span class="token function">osMessageQueueGet</span><span class="token punctuation">(</span>PrintQueueHandle<span class="token punctuation">,</span> getPrintBufFromQueue<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* USER CODE END 5 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u6253\u5370\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u6CE8: \u6B64\u5904tempBuffer\u5927\u5C0F\u548C\u6D88\u606F\u961F\u5217\u7684Item\u5927\u5C0F\u4E00\u81F4</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">fun_print</span><span class="token expression"><span class="token punctuation">(</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">{</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token keyword">char</span> tempBuffer<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token function">memset</span><span class="token punctuation">(</span>tempBuffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token function">sprintf</span><span class="token punctuation">(</span>tempBuffer<span class="token punctuation">,</span> format<span class="token punctuation">,</span> </span><span class="token punctuation">##</span><span class="token expression">__VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token function">osMessageQueuePut</span><span class="token punctuation">(</span>PrintQueueHandle<span class="token punctuation">,</span> tempBuffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">}</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u6B64\u65F6\u5728\u67E5\u770B\u6211\u4EEC\u7684\u4E32\u53E3\u8F93\u51FA\u7ED3\u679C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u4E0D\u4F1A\u51FA\u73B0\u7B2C\u4E00\u5F20\u56FE\u4E2D\u7684\u4E71\u5E8F <img src="https://img-blog.csdnimg.cn/685d7130f22d4516958b0f71d15e7bbf.png#pic_center" alt="\u4E32\u53E3\u8F93\u51FA\u7ED3\u679C"></li></ol><h2 id="\u4F7F\u7528\u4E92\u65A5\u91CF\u89E3\u51B3" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u4E92\u65A5\u91CF\u89E3\u51B3" aria-hidden="true">#</a> \u4F7F\u7528\u4E92\u65A5\u91CF\u89E3\u51B3</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">mt_log_mutex</span> <span class="token expression">myMutex01Handle</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">mt_log</span><span class="token expression"><span class="token punctuation">(</span>format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
  <span class="token expression"><span class="token function">osMutexAcquire</span><span class="token punctuation">(</span>mt_log_mutex<span class="token punctuation">,</span> osWaitForever<span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
  <span class="token expression"><span class="token function">printf</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> </span><span class="token punctuation">##</span><span class="token expression">__VA_ARGS__<span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token punctuation">\\</span>
  <span class="token expression"><span class="token function">osMutexRelease</span><span class="token punctuation">(</span>mt_log_mutex<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(\u4E0A\u8FF0\u4EE3\u7801\u4EC5\u4F9B\u4EA4\u6D41\u4F7F\u7528\uFF0C\u8BF7\u52FF\u76F4\u63A5\u7528\u5728\u751F\u4EA7\u73AF\u5883\uFF0C\u5982\u6709\u9519\u8BEF\uFF0C\u8BF7\u5728\u8BC4\u8BBA\u680F\u63D0\u51FA\u8BA8\u8BBA)</p>`,37),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","100rtos-uart.html.vue"]]);export{r as default};
