import{_ as e,o as t,c as n,d as a}from"./app.7865bcaa.js";const l={},s=a(`<p>FMC\u662FFlexible Memory Controller\u7684\u7F29\u5199\uFF0C\u8BD1\u4E3A\u53EF\u53D8\u5B58\u50A8\u63A7\u5236\u5668\u3002\u5B83\u53EF\u4EE5\u7528\u4E8E\u9A71\u52A8\u5305\u62ECSRAM\u3001SDRAM\u3001 NOR FLASH\u4EE5\u53CANANDFLSAH\u7C7B\u578B\u7684\u5B58\u50A8\u5668\u3002\u5728\u5176\u5B83\u7CFB\u5217\u7684STM32\u63A7\u5236\u5668\u4E2D\uFF0C\u53EA\u6709FSMC\u63A7\u5236\u5668(Flexible Static MemoryController)\uFF0C\u8BD1\u4E3A\u53EF\u53D8\u9759\u6001\u5B58\u50A8\u63A7\u5236\u5668\uFF0C \u6240\u4EE5\u5B83\u4EEC\u4E0D\u80FD\u9A71\u52A8SDRAM\u8FD9\u6837\u7684\u52A8\u6001\u5B58\u50A8\u5668\uFF0C\u56E0\u4E3A\u9A71\u52A8SDRAM\u65F6\u9700\u8981\u5B9A\u65F6\u5237\u65B0\uFF0CSTM32F429\u7684FMC\u5916\u8BBE\u624D\u652F\u6301\u8BE5\u529F\u80FD\uFF0C\u4E14\u53EA\u652F\u6301\u666E\u901A\u7684SDRAM\uFF0C \u4E0D\u652F\u6301DDR\u7C7B\u578B\u7684SDRAM\u3002</p><h1 id="\u901A\u4FE1\u5F15\u811A" tabindex="-1"><a class="header-anchor" href="#\u901A\u4FE1\u5F15\u811A" aria-hidden="true">#</a> \u901A\u4FE1\u5F15\u811A</h1><table><thead><tr><th style="text-align:left;">FMC \u5F15\u811A\u540D\u79F0</th><th style="text-align:left;">\u5BF9\u5E94\u7684 SDRAM \u5F15\u811A\u540D</th><th style="text-align:left;">\u8BF4\u660E</th></tr></thead><tbody><tr><td style="text-align:left;">FMC_NBL[3:0]</td><td style="text-align:left;">DQM[3:0]</td><td style="text-align:left;">\u6570\u636E\u63A9\u7801\u4FE1\u53F7</td></tr><tr><td style="text-align:left;">FMC_A[12:0]</td><td style="text-align:left;">A[12:0]</td><td style="text-align:left;">\u884C/\u5217\u5730\u5740\u7EBF</td></tr><tr><td style="text-align:left;">FMC_A[15:14]</td><td style="text-align:left;">BS[1:0]</td><td style="text-align:left;">Bank\u5730\u5740\u7EBF</td></tr><tr><td style="text-align:left;">FMC_D[31:0]</td><td style="text-align:left;">DQ[31:0]</td><td style="text-align:left;">\u6570\u636E\u7EBF</td></tr><tr><td style="text-align:left;">FMC_SDCLK</td><td style="text-align:left;">CLK</td><td style="text-align:left;">\u540C\u6B65\u65F6\u949F\u4FE1\u53F7</td></tr><tr><td style="text-align:left;">FMC_SDNWE</td><td style="text-align:left;">WE#</td><td style="text-align:left;">\u5199\u5165\u4F7F\u80FD</td></tr><tr><td style="text-align:left;">FMC_SDCKE[1:0]</td><td style="text-align:left;">CKE</td><td style="text-align:left;">SDCKE0: SDRAM\u5B58\u50A8\u533A\u57DF1\u65F6\u949F\u4F7F\u80FD<br>SDRAMCKE1: SDRAM\u5B58\u50A8\u533A\u57DF2\u65F6\u949F\u4F7F\u80FD</td></tr><tr><td style="text-align:left;">FMC_NRAS</td><td style="text-align:left;">RAS</td><td style="text-align:left;">\u884C\u5730\u5740\u9009\u901A\u4FE1\u53F7</td></tr><tr><td style="text-align:left;">FMC_NCAS</td><td style="text-align:left;">CAS</td><td style="text-align:left;">\u5217\u5730\u5740\u9009\u901A\u4FE1\u53F7</td></tr></tbody></table><h1 id="\u8BBE\u7F6E\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u7F6E\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u8BBE\u7F6E\u7ED3\u6784\u4F53</h1><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/**
  * @brief FMC SDRAM Timing parameters structure definition
  */</span>
<span class="token keyword">typedef</span> <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
  <span class="token class-name">uint32_t</span> LoadToActiveDelay<span class="token punctuation">;</span>            <span class="token comment">/*!&lt; Defines the delay between a Load Mode Register command and
                                              an active or Refresh command in number of memory clock cycles.
                                              This parameter can be a value between Min_Data = 1 and Max_Data = 16  */</span>

  <span class="token class-name">uint32_t</span> ExitSelfRefreshDelay<span class="token punctuation">;</span>         <span class="token comment">/*!&lt; Defines the delay from releasing the self refresh command to
                                              issuing the Activate command in number of memory clock cycles.
                                              This parameter can be a value between Min_Data = 1 and Max_Data = 16  */</span>

  <span class="token class-name">uint32_t</span> SelfRefreshTime<span class="token punctuation">;</span>              <span class="token comment">/*!&lt; Defines the minimum Self Refresh period in number of memory clock
                                              cycles.
                                              This parameter can be a value between Min_Data = 1 and Max_Data = 16  */</span>

  <span class="token class-name">uint32_t</span> RowCycleDelay<span class="token punctuation">;</span>                <span class="token comment">/*!&lt; Defines the delay between the Refresh command and the Activate command
                                              and the delay between two consecutive Refresh commands in number of
                                              memory clock cycles.
                                              This parameter can be a value between Min_Data = 1 and Max_Data = 16  */</span>

  <span class="token class-name">uint32_t</span> WriteRecoveryTime<span class="token punctuation">;</span>            <span class="token comment">/*!&lt; Defines the Write recovery Time in number of memory clock cycles.
                                              This parameter can be a value between Min_Data = 1 and Max_Data = 16  */</span>

  <span class="token class-name">uint32_t</span> RPDelay<span class="token punctuation">;</span>                      <span class="token comment">/*!&lt; Defines the delay between a Precharge Command and an other command
                                              in number of memory clock cycles.
                                              This parameter can be a value between Min_Data = 1 and Max_Data = 16  */</span>

  <span class="token class-name">uint32_t</span> RCDDelay<span class="token punctuation">;</span>                     <span class="token comment">/*!&lt; Defines the delay between the Activate Command and a Read/Write
                                              command in number of memory clock cycles.
                                              This parameter can be a value between Min_Data = 1 and Max_Data = 16  */</span>
<span class="token punctuation">}</span> FMC_SDRAM_TimingTypeDef<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u7ED3\u6784\u4F53\u6210\u5458\u5B9A\u4E49\u7684\u90FD\u662FSDRAM\u53D1\u9001\u5404\u79CD\u547D\u4EE4\u540E\u5FC5\u987B\u7684\u5EF6\u8FDF\uFF0C\u5B83\u7684\u914D\u7F6E\u5BF9\u5E94\u5230FMC_SDTR\u4E2D\u7684\u5BC4\u5B58\u5668\u4F4D\u3002\u6240\u6709\u6210\u5458\u53C2\u6570\u503C\u7684\u5355\u4F4D\u662F\u5468\u671F\uFF0C \u53C2\u6570\u503C\u5927\u5C0F\u90FD\u53EF\u8BBE\u7F6E\u6210\u201C1-16\u201D\u3002\u5173\u4E8E\u8FD9\u4E9B\u5EF6\u65F6\u65F6\u95F4\u7684\u5B9A\u4E49\u53EF\u4EE5\u770B\u201CSDRAM\u521D\u59CB\u5316\u6D41\u7A0B\u201D\u548C\u201CSDRAM\u8BFB\u5199\u6D41\u7A0B\u201D\u5C0F\u8282\u7684\u65F6\u5E8F\u56FE\u4E86\u89E3\u3002 \u5177\u4F53\u53C2\u6570\u503C\u6839\u636ESDRAM\u82AF\u7247\u7684\u624B\u518C\u8BF4\u660E\u6765\u914D\u7F6E\u3002\u5404\u6210\u5458\u4ECB\u7ECD\u5982\u4E0B\uFF1A</p><ol><li><p>LoadToActiveDelay</p><p>\u672C\u6210\u5458\u8BBE\u7F6ETMRD\u5EF6\u8FDF(Load Mode Register to Active)\uFF0C\u5373\u53D1\u9001\u52A0\u8F7D\u6A21\u5F0F\u5BC4\u5B58\u5668\u547D\u4EE4\u540E\u8981\u7B49\u5F85\u7684\u65F6\u95F4\uFF0C\u8FC7\u4E86\u8FD9\u6BB5\u65F6\u95F4\u624D\u53EF\u4EE5\u53D1\u9001\u884C\u6709\u6548\u6216\u5237\u65B0\u547D\u4EE4\u3002</p></li><li><p>ExitSelfRefreshDelay</p><p>\u672C\u6210\u5458\u8BBE\u7F6E\u9000\u51FATXSR\u5EF6\u8FDF(Exit Self-refresh delay)\uFF0C\u5373\u9000\u51FA\u81EA\u6211\u5237\u65B0\u547D\u4EE4\u540E\u8981\u7B49\u5F85\u7684\u65F6\u95F4\uFF0C\u8FC7\u4E86\u8FD9\u6BB5\u65F6\u95F4\u624D\u53EF\u4EE5\u53D1\u9001\u884C\u6709\u6548\u547D\u4EE4\u3002</p></li><li><p>SelfRefreshTime</p><p>\u672C\u6210\u5458\u8BBE\u7F6E\u81EA\u6211\u5237\u65B0\u65F6\u95F4TRAS\uFF0C\u5373\u53D1\u9001\u884C\u6709\u6548\u547D\u4EE4\u540E\u8981\u7B49\u5F85\u7684\u65F6\u95F4\uFF0C\u8FC7\u4E86\u8FD9\u6BB5\u65F6\u95F4\u624D\u6267\u884C\u9884\u5145\u7535\u547D\u4EE4\u3002</p></li><li><p>RowCycleDelay</p><p>\u672C\u6210\u5458\u8BBE\u7F6ETRC\u5EF6\u8FDF(Row cycle delay)\uFF0C\u5373\u4E24\u4E2A\u884C\u6709\u6548\u547D\u4EE4\u4E4B\u95F4\u7684\u5EF6\u8FDF\uFF0C\u4EE5\u53CA\u4E24\u4E2A\u76F8\u90BB\u5237\u65B0\u547D\u4EE4\u4E4B\u95F4\u7684\u5EF6\u8FDF</p></li><li><p>WriteRecoveryTime</p><p>\u672C\u6210\u5458\u8BBE\u7F6ETWR\u5EF6\u8FDF(Recovery delay)\uFF0C\u5373\u5199\u547D\u4EE4\u548C\u9884\u5145\u7535\u547D\u4EE4\u4E4B\u95F4\u7684\u5EF6\u8FDF\uFF0C\u7B49\u5F85\u8FD9\u6BB5\u65F6\u95F4\u540E\u624D\u5F00\u59CB\u6267\u884C\u9884\u5145\u7535\u547D\u4EE4\u3002</p></li><li><p>RPDelay</p><p>\u672C\u6210\u5458\u8BBE\u7F6ETRP\u5EF6\u8FDF(Row precharge delay)\uFF0C\u5373\u9884\u5145\u7535\u547D\u4EE4\u4E0E\u5176\u5B83\u547D\u4EE4\u4E4B\u95F4\u7684\u5EF6\u8FDF\u3002</p></li><li><p>FMC_RCDDelay</p><p>\u672C\u6210\u5458\u8BBE\u7F6ETRCD\u5EF6\u8FDF(Row to column delay)\uFF0C\u5373\u884C\u6709\u6548\u547D\u4EE4\u5230\u5217\u8BFB\u5199\u547D\u4EE4\u4E4B\u95F4\u7684\u5EF6\u8FDF\u3002</p></li></ol><h1 id="\u9664\u4E86\u9700\u8981cubemx\u751F\u6210\u7684\u4EE3\u7801\u5916-\u8FD8\u9700\u8981\u521D\u59CB\u5316sdram\u7684\u65F6\u5E8F\u3002" tabindex="-1"><a class="header-anchor" href="#\u9664\u4E86\u9700\u8981cubemx\u751F\u6210\u7684\u4EE3\u7801\u5916-\u8FD8\u9700\u8981\u521D\u59CB\u5316sdram\u7684\u65F6\u5E8F\u3002" aria-hidden="true">#</a> \u9664\u4E86\u9700\u8981cubemx\u751F\u6210\u7684\u4EE3\u7801\u5916\uFF0C\u8FD8\u9700\u8981\u521D\u59CB\u5316SDRAM\u7684\u65F6\u5E8F\u3002</h1>`,8),i=[s];function d(c,r){return t(),n("div",null,i)}const m=e(l,[["render",d],["__file","STM32FSMC&FMC.html.vue"]]);export{m as default};
